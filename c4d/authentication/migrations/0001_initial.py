# Generated by Django 5.0.7 on 2025-04-24 05:35

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('state', models.CharField(blank=True, choices=[('VIC', 'VIC'), ('NSW', 'NSW'), ('ACT', 'ACT'), ('QLD', 'QLD'), ('NT', 'NT'), ('WA', 'WA'), ('SA', 'SA')], max_length=3, null=True)),
                ('suburb', models.CharField(blank=True, max_length=100, null=True)),
                ('clearance_level', models.CharField(blank=True, choices=[('None', 'None'), ('Pending', 'Pending'), ('Baseline', 'Baseline'), ('NV1', 'NV1'), ('NV2', 'NV2'), ('PV', 'PV')], max_length=20, null=True)),
                ('clearance_no', models.CharField(blank=True, max_length=50, null=True)),
                ('clearance_revalidation', models.DateField(blank=True, null=True)),
                ('clearance_valid', models.CharField(choices=[('PENDING', 'Pending'), ('YES', 'Yes'), ('NO', 'No')], default='PENDING', max_length=7)),
                ('clearance_active', models.BooleanField(default=False)),
                ('skill_sets', models.TextField(blank=True, null=True)),
                ('skill_level', models.CharField(blank=True, max_length=100, null=True)),
                ('onboarding_completed', models.BooleanField(default=False)),
                ('pending_first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('pending_last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('pending_name_reason', models.TextField(blank=True, null=True)),
                ('pending_name_requested', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
